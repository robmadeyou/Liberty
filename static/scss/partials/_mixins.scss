/******************************************************************
Site Name:
Author:

Stylesheet: Mixins Stylesheet

This is where you can take advantage of Sass' great features: Mixins.
I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

Helpful:
http://sachagreif.com/useful-sass-mixins/
http://thesassway.com/intermediate/leveraging-sass-mixins-for-cleaner-code
http://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/

******************************************************************/


/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}

/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: $light, $to: $dark) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left bottom, right top, from($from), to($to));
	background-image: -webkit-linear-gradient(left top, $from, $to);
	background-image: -moz-linear-gradient(bottom left, $from, $to);
	background-image: -o-linear-gradient(bottom left, $from, $to);
	background-image: linear-gradient(to bottom left, $from, $to);
}

/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	-ms-box-sizing:     $type;
	box-sizing:         $type;
}

/*********************
BOX SHADOW
*********************/

@mixin box-shadow($type: box-shadow) {
	-webkit-box-shadow: 0px 6px 12px 0px rgba(0,0,0,0.2);
	-moz-box-shadow: 0px 6px 12px 0px rgba(0,0,0,0.2);
	box-shadow: 0px 6px 12px 0px rgba(0,0,0,0.2);
}

/*********************
GRID SYSTEM
*********************/

@mixin screen-size ($ss) {
	@if $ss == "sm-max" {
		@media (max-width: $small ) {
			@content;
		}
	}
	@if $ss == "sm-min" {
		@media (min-width: $small ) {
			@content;
		}
	}
	@if $ss == "md-max" {
		@media (max-width: $medium ) {
			@content;
		}
	}
	@if $ss == "md-min" {
		@media (min-width: $medium ) {
			@content;
		}
	}
	@if $ss == "lg-min" {
		@media (min-width: $large ) {
			@content;
		}
	}
	@if $ss == "lg-max" {
		@media (max-width: $large ) {
			@content;
		}
	}
	@if $ss == "xl-min" {
		@media (min-width: $x-large ) {
			@content;
		}
	}
	@if $ss == "xl-max" {
		@media (max-width: $x-large ) {
			@content;
		}
	}

}


/*********************
GRID SYSTEM
*********************/

// nifty calculations

@mixin width{
    width: -moz-calc(100% - ($base-space));
  	width: -webkit-calc(100% - ($base-space));
  	width: -o-calc(100% - ($base-space));
  	width: calc(100% - ($base-space));
}

@mixin height{
	height: -moz-calc(100% - ($base-space));
  	height: -webkit-calc(100% - ($base-space));
  	height: -o-calc(100% - ($base-space));
  	height: calc(100% - ($base-space));
}